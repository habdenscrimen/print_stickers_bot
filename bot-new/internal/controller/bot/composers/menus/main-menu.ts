import { Menu } from '@grammyjs/menu'
import { BotContext } from '../../context'
import { SessionSteps } from '../../session'

const faqDocURL = `https://telegra.ph/St%D1%96kasi--pitannya-v%D1%96dpov%D1%96d%D1%96-07-02`
const supportBotURL = `https://t.me/stickasy_support`

export const mainMenuText = `
–ü—Ä–∏–≤—ñ—Ç üëã
–¶–µ–π –±–æ—Ç –¥—Ä—É–∫—É—î —Å—Ç—ñ–∫–µ—Ä–∏ –∑ –¢–µ–ª–µ–≥—Ä–∞–º—É\\.

*–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î*
1Ô∏è‚É£ –ù–∞–¥—Å–∏–ª–∞—î—Ç–µ –±–æ—Ç—É —Å—Ç—ñ–∫–µ—Ä–∏\\.
2Ô∏è‚É£ –í–≤–æ–¥–∏—Ç–µ –¥–∞–Ω—ñ –¥–æ—Å—Ç–∞–≤–∫–∏ –ù–æ–≤–æ—é –ü–æ—à—Ç–æ—é\\.
3Ô∏è‚É£ –ß–µ—Ä–µ–∑ —Ç–∏–∂–¥–µ–Ω—å –º–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –í–∞–º –Ω–∞–¥—Ä—É–∫–æ–≤–∞–Ω—ñ —Å—Ç—ñ–∫–µ—Ä–∏\\.

*–ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É*, —â–æ —á–∏–º –±—ñ–ª—å—à–µ —Å—Ç—ñ–∫–µ—Ä—ñ–≤ –í–∏ –∑–∞–º–æ–≤–∏—Ç–µ, —Ç–∏–º –Ω–∏–∂—á–æ—é –±—É–¥–µ —Ü—ñ–Ω–∞\\:
üëâ 1\\-5 ‚Äî 18 –≥—Ä–Ω\\/—à—Ç
üëâ 6\\-10 ‚Äî 16 –≥—Ä–Ω\\/—à—Ç
üëâ –≤—ñ–¥ 11 ‚Äî 14 –≥—Ä–Ω\\/—à—Ç
üöö –≤—ñ–¥ 25 ‚Äî –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞

üá∫üá¶ *10%* –ø—Ä–∏–±—É—Ç–∫—É –ó–°–£\\!

–©–æ–± –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è _\\(–∞–±–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–ª–∞—Ü–∞—Ç–∏ –±–æ—Ç–∞ üòÑ\\)_, —Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ üëá
`

const createOrderInstructionText = `
üöÄ –ù–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—ñ —Å—Ç—ñ–∫–µ—Ä–∏\\!

‚ÑπÔ∏è –†–æ–∑–º—ñ—Ä –Ω–∞–¥—Ä—É–∫–æ–≤–∞–Ω–æ–≥–æ —Å—Ç—ñ–∫–µ—Ä–∞ ‚Äî *4—Ö4* —Å–º\\.
\\(–Ø–∫—â–æ —Å—Ç—ñ–∫–µ—Ä —É –¢–µ–ª–µ–≥—Ä–∞–º—ñ –º–µ–Ω—à–∏–π, —Ç–æ —ñ –Ω–∞–¥—Ä—É–∫–æ–≤–∞–Ω–∏–π –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –±—É–¥–µ –º–µ–Ω—à–∏–º\\.\\)

*–ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É*, —â–æ —á–∏–º –±—ñ–ª—å—à–µ —Å—Ç—ñ–∫–µ—Ä—ñ–≤ –í–∏ –∑–∞–º–æ–≤–∏—Ç–µ, —Ç–∏–º –Ω–∏–∂—á–æ—é –±—É–¥–µ —Ü—ñ–Ω–∞\\:
üëâ 1\\-5 ‚Äî 18 –≥—Ä–Ω\\/—à—Ç
üëâ 6\\-10 ‚Äî 16 –≥—Ä–Ω\\/—à—Ç
üëâ –≤—ñ–¥ 11 ‚Äî 14 –≥—Ä–Ω\\/—à—Ç
üöö –≤—ñ–¥ 25 ‚Äî –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞

–ù–∞–¥—Å–∏–ª–∞–π—Ç–µ —Å—Ç—ñ–∫–µ—Ä–∏ –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑ üëá
`

export const mainMenu = new Menu<BotContext>('main-menu')
  .text(`üöÄ –ó–∞–º–æ–≤–∏—Ç–∏ —Å—Ç—ñ–∫–µ—Ä–∏`, async (ctx) => {
    await ctx.editMessageText(createOrderInstructionText)

    ctx.menu.nav('create-order-submenu')

    // set step to SelectStickers
    const session = await ctx.session
    session.step = SessionSteps.SelectStickers
  })
  .row()
  .submenu(`‚ùì –ü–æ—Å—Ç–∞–≤–∏—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è`, 'faq-submenu')
  .row()
// .text(`‚úâÔ∏è –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è`, async (ctx) => {
//   await ctx.reply('–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
// })
// .row()

const faqSubmenu = new Menu<BotContext>('faq-submenu')
  .url(`üìÉ –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å`, faqDocURL)
  .row()
  .url(`‚úçÔ∏è –ü–æ—Å—Ç–∞–≤–∏—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è`, supportBotURL)
  .row()
  .back(`‚¨ÖÔ∏è –ù–∞–∑–∞–¥`)
  .row()

const createOrderSubmenu = new Menu<BotContext>('create-order-submenu')
  .text(`‚¨ÖÔ∏è –ù–∞–∑–∞–¥`, async (ctx) => {
    await ctx.editMessageText(mainMenuText)

    ctx.menu.back()

    // set step to MainMenu
    const session = await ctx.session
    session.step = SessionSteps.MainMenu
  })
  .row()

mainMenu.register(faqSubmenu)
mainMenu.register(createOrderSubmenu)
