import { Config } from '../../../../config'
import { OrderPrice } from '../../../services'
import { Text } from './text'

interface Options {
  stickersCount: number
  orderPrice: OrderPrice
  config: Config
}

export const motivateToSelectMoreStickersText = (options: Options): Text => {
  const { stickersCount, orderPrice, config } = options

  let motivationalText = ``

  if (orderPrice.orderPriceLevel === 'level_1') {
    motivationalText = `
–ó–∞–º–æ–≤ —Ç—Ä–æ—Ö–∏ –±—ñ–ª—å—à–µ –Ω–∞–ª—ñ–ø–æ–∫ —ñ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–Ω—É –Ω–∞–ª—ñ–ø–∫—É –∑–º–µ–Ω—à–∏—Ç—å—Å—è:
üëâ –≤—ñ–¥ 6 –¥–æ 11 ‚Äî *16* –≥—Ä–Ω/—à—Ç
üëâ –≤—ñ–¥ 11 ‚Äî *14* –≥—Ä–Ω/—à—Ç
üöö –≤—ñ–¥ 25 ‚Äî –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞

_–ù–∞–ø—Ä–∏–∫–ª–∞–¥, 5 –Ω–∞–ª—ñ–ø–æ–∫ –∫–æ—à—Ç—É—é—Ç—å *90* –≥—Ä–Ω, –∞ 6 –Ω–∞–ª—ñ–ø–æ–∫ ‚Äî *96* –≥—Ä–Ω. –í–∏—Ö–æ–¥–∏—Ç—å –≤–∏–≥—ñ–¥–Ω—ñ—à–µ üöÄ_
`
  }

  if (orderPrice.orderPriceLevel === 'level_2') {
    motivationalText = `
–ó–∞–º–æ–≤ —Ç—Ä–æ—Ö–∏ –±—ñ–ª—å—à–µ –Ω–∞–ª—ñ–ø–æ–∫ —ñ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–Ω—É –Ω–∞–ª—ñ–ø–∫—É –∑–º–µ–Ω—à–∏—Ç—å—Å—è:
üëâ –≤—ñ–¥ 11 ‚Äî *14* –≥—Ä–Ω/—à—Ç
üöö –≤—ñ–¥ 25 ‚Äî –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞

_–ù–∞–ø—Ä–∏–∫–ª–∞–¥, 10 –Ω–∞–ª—ñ–ø–æ–∫ –∫–æ—à—Ç—É—é—Ç—å *160* –≥—Ä–Ω, –∞ 11 –Ω–∞–ª—ñ–ø–æ–∫ ‚Äî *154* –≥—Ä–Ω. –í–∏—Ö–æ–¥–∏—Ç—å –≤–∏–≥—ñ–¥–Ω—ñ—à–µ üöÄ_
`
  }

  if (orderPrice.orderPriceLevel === 'level_3') {
    motivationalText = `
üöö –ù–∞–≥–∞–¥—É—é, —â–æ –ø—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ –≤—ñ–¥ 25 –Ω–∞–ª—ñ–ø–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∞ –±—É–¥–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ—é.
`
  }

  const { stickerCost } = config.tariffs[orderPrice.orderPriceLevel]
  const { stickersPrice, deliveryPrice } = orderPrice

  const text = `
‚úÖ –û–±—Ä–∞–Ω–æ *${stickersCount}* –Ω–∞–ª—ñ–ø–æ–∫ –∑–∞ —Ü—ñ–Ω–æ—é *${stickerCost}* –≥—Ä–Ω/—à—Ç${
    orderPrice.freeStickersUsed > 0
      ? `, –∑ –Ω–∏—Ö *${orderPrice.freeStickersUsed}* –Ω–∞–ª—ñ–ø–æ–∫ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ (–∑–∞–ª–∏—à–∏–ª–æ—Å—å *${orderPrice.freeStickersLeft}* –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏—Ö –Ω–∞–ª—ñ–ø–æ–∫).`
      : '.'
  }

–°—É–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è *${stickersPrice}* –≥—Ä–Ω. –ø—Ä–∏ –≤–∞—Ä—Ç–æ—Å—Ç—ñ –¥–æ—Å—Ç–∞–≤–∫–∏ *${deliveryPrice}* –≥—Ä–Ω.
${motivationalText}
–©–æ–± –¥–æ–¥–∞—Ç–∏ –Ω–∞–ª—ñ–ø–∫–∏, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–≤–∂—É–π —ó—Ö –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ üëá
`
    .replace(/\(/gm, '\\(')
    .replace(/\)/gm, '\\)')
    .replace(/\./gm, '\\.')
    .replace(/\:/gm, '\\:')

  return {
    text,
    parseMode: 'MarkdownV2',
  }
}
