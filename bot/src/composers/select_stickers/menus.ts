import { Menu } from '@grammyjs/menu'
import { InlineKeyboard } from 'grammy'
import { CustomContext } from '../../context'
import { Routes } from '../../routes'

export enum MenuDoneCallbackQueries {
  ConfirmStickers = 'confirm_stickers',
  Cancel = 'cancel',
}

export const menuDone = new Menu<CustomContext>('select_stickers_menu_done').text(
  '–¶–µ –≤—Å–µ',
  async (ctx) => {
    const logger = ctx.logger.child({ name: 'selectStickersMenuDone' })

    try {
      // get session
      const session = await ctx.session
      session.route = Routes.ConfirmStickers
      logger.debug('got session', { session })

      // create sticker pack
      const stickerSetName = await ctx.services.TelegramStickers.CreateStickerSet(
        ctx,
        Object.values(session.stickers!),
      )
      logger.debug('created sticker pack', { stickerPackName: stickerSetName })

      // update sticker set name in session to be able to delete this set later
      session.stickerSetName = stickerSetName

      // create keyboard with a link to sticker set
      const keyboardWithLinkToStickerSet = new InlineKeyboard()
        .url('–¢–≤–æ—ó —Å—Ç—ñ–∫–µ—Ä–∏', `https://t.me/addstickers/${stickerSetName}`)
        .row()
        .text('–í—Å–µ —Å—É–ø–µ—Ä, –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é', MenuDoneCallbackQueries.ConfirmStickers)
        .row()
        .text('–Ø –ø–æ–º–∏–ª–∏–≤—Å—è, –¥–∞–≤–∞–π —Å–ø–æ—á–∞—Ç–∫—É', MenuDoneCallbackQueries.Cancel)
        .row()

      // ask user to confirm stickers
      await ctx.reply(`–Ø –∑—ñ–±—Ä–∞–≤ —É—Å—ñ —Å—Ç—ñ–∫–µ—Ä–∏ —É –ø–∞–∫ ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä, —á–∏ –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫—É üòé`, {
        reply_markup: keyboardWithLinkToStickerSet,
      })
    } catch (error) {
      logger.error('failed to process menu done', { error })
    }
  },
)
